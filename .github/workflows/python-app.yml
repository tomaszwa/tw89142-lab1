# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os}}
    defaults:
      run:
        shell: bash
        working-directory: ./example-app        
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4    
    - name: Install deps
      run : poetry install --no-root
    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: /home/runner/work/tw89142-lab1/tw89142-lab1/example-app/.venv
        key: ${{ runner.os }}--venv
    
  lint:
      runs-on: ubuntu-latest
      needs: build
      defaults:
        run:
          working-directory: ./example-app
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.11
          uses: actions/setup-python@v3
          with:
            python-version: "3.11"
        - name: Install Poetry Action
          uses: snok/install-poetry@v1.3.4  
        - name: Recover cached deps
          id: cached-poetry-dependencies
          uses: actions/cache@v3
          with:
            path: /home/runner/work/tw89142-lab1/tw89142-lab1/example-app/.venv
            key: ${{ runner.os }}--venv
        - name: lint
          run: |
            poetry run task lint
        
  
  formatter:
        runs-on: ubuntu-latest
        needs: build
        defaults:
          run:
            working-directory: ./example-app
        steps:
          - uses: actions/checkout@v4
          - name: Set up Python 3.11
            uses: actions/setup-python@v3
            with:
              python-version: "3.11"
          - name: Install Poetry Action
            uses: snok/install-poetry@v1.3.4  
          - name: Recover cached deps
            id: cached-poetry-dependencies
            uses: actions/cache@v3
            with:
              path: /home/runner/work/tw89142-lab1/tw89142-lab1/example-app/.venv
              key: ${{ runner.os }}--venv
          - name: formatter
            run: |
              poetry run task formatter
  security:          
      runs-on: ubuntu-latest 
      defaults:
        run:
          working-directory: ./example-app
      needs: build
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.11
          uses: actions/setup-python@v3
          with:
            python-version: "3.11"
        - name: Install Poetry Action
          uses: snok/install-poetry@v1.3.4  
        - name: Recover cached deps
          id: cached-poetry-dependencies
          uses: actions/cache@v3      
          with:
            path: /home/runner/work/tw89142-lab1/tw89142-lab1/example-app/.venv
            key: ${{ runner.os }}--venv
        - name: security
          run: |
            poetry run task security

  unit_test:
      runs-on: ubuntu-latest
      needs: [lint,formatter,security]
      defaults:
        run:
          working-directory: ./example-app
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.11
          uses: actions/setup-python@v3
          with:
            python-version: "3.11"
        - name: Install Poetry Action
          uses: snok/install-poetry@v1.3.4  
        - name: Recover cached deps
          id: cached-poetry-dependencies
          uses: actions/cache@v3  
          with:
            path: /home/runner/work/tw89142-lab1/tw89142-lab1/example-app/.venv
            key: ${{ runner.os }}--venv
        - name: test
          run: |
            poetry run task test
